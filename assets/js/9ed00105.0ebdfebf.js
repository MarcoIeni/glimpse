"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>f});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},m=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,m=u(e,["components","mdxType","originalType","parentName"]),c=s(t),d=i,f=c["".concat(l,".").concat(d)]||c[d]||p[d]||o;return t?r.createElement(f,a(a({ref:n},m),{},{components:t})):r.createElement(f,a({ref:n},m))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var u={};for(var l in n)hasOwnProperty.call(n,l)&&(u[l]=n[l]);u.originalType=e,u[c]="string"==typeof e?e:i,a[1]=u;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9733:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>u,toc:()=>s});var r=t(7462),i=(t(7294),t(3905));const o={sidebar_position:3},a="Configuration",u={unversionedId:"configuration",id:"configuration",title:"Configuration",description:"You can make Glimpse your own by configuring its key bindings.",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/docs/configuration",draft:!1,editUrl:"https://github.com/MarcoIeni/glimpse/tree/main/docs/docs/configuration.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Install",permalink:"/docs/install"},next:{title:"Vim tricks",permalink:"/docs/vim_tricks"}},l={},s=[{value:"Configuration examples",id:"configuration-examples",level:2},{value:"Add a key binding to the top menu",id:"add-a-key-binding-to-the-top-menu",level:3},{value:"Add a key binding a submenu",id:"add-a-key-binding-a-submenu",level:3},{value:"Delete a key from a menu",id:"delete-a-key-from-a-menu",level:3},{value:"Sorting menu items alphabetically",id:"sorting-menu-items-alphabetically",level:3},{value:"Overwrite the entire menu",id:"overwrite-the-entire-menu",level:3},{value:"Edit a key",id:"edit-a-key",level:3},{value:"Icons",id:"icons",level:2}],m={toc:s},c="wrapper";function p(e){let{components:n,...t}=e;return(0,i.kt)(c,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"You can make Glimpse your own by configuring its key bindings."),(0,i.kt)("p",null,"To allow maximum flexibility, Glimpse let you configure its menu by using ",(0,i.kt)("inlineCode",{parentName:"p"},"javascript"),"."),(0,i.kt)("p",null,"To edit the default configuration file, press ",(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+P")," to open the command palette and search for ",(0,i.kt)("inlineCode",{parentName:"p"},"Glimpse: Configure"),"."),(0,i.kt)("p",null,"After editing the configuration file, you need to reload the window for the changes to take effect.\nTo do so, press ",(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+P")," to open the command palette and search for ",(0,i.kt)("inlineCode",{parentName:"p"},"Developer: Reload Window"),", or press ",(0,i.kt)("inlineCode",{parentName:"p"},"q r")," from Glimpse."),(0,i.kt)("h2",{id:"configuration-examples"},"Configuration examples"),(0,i.kt)("p",null,"In the following sections, there are some examples of what you can do with the configuration file.\nRemember that you can use any ",(0,i.kt)("inlineCode",{parentName:"p"},"javascript")," code, so the sky is the limit!"),(0,i.kt)("p",null,"Also, take a look at the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/MarcoIeni/glimpse/tree/main/src/keys"},"keys"),"\nrepository directory to take inspiration from the default configuration."),(0,i.kt)("h3",{id:"add-a-key-binding-to-the-top-menu"},"Add a key binding to the top menu"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = function editConfig(menu) {\n  menu.items.push({\n    name: "Auto Fix",\n    key: "a",\n    icon: "lightbulb",\n    command: "editor.action.autoFix",\n  });\n\n  return menu;\n};\n')),(0,i.kt)("h3",{id:"add-a-key-binding-a-submenu"},"Add a key binding a submenu"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = function editConfig(menu) {\n  const errorMenu = subMenu(menu, "e");\n  errorMenu.items.push({\n    name: "Auto Fix",\n    key: "a",\n    icon: "lightbulb",\n    command: "editor.action.autoFix",\n  });\n\n  return menu;\n};\n\n/**\n * @param { UserMenu } userMenu\n * @param { string } key\n * @returns { UserMenu }\n */\nfunction subMenu(menu, key) {\n  for (const item of menu.items) {\n    if (item.key === key && "menu" in item) {\n      return item.menu;\n    }\n  }\n  throw new Error(`No submenu for key ${key}`);\n}\n')),(0,i.kt)("h3",{id:"delete-a-key-from-a-menu"},"Delete a key from a menu"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = function editConfig(menu) {\n  deleteKey(menu, "*");\n  return menu;\n};\n\n/**\n * Delete a key from a menu\n * @param { UserMenu } userMenu\n * @param { string } key\n * @returns { UserMenu }\n */\nfunction deleteKey(userMenu, key) {\n  userMenu.items = userMenu.items.filter((item) => item.key !== key);\n}\n')),(0,i.kt)("h3",{id:"sorting-menu-items-alphabetically"},"Sorting menu items alphabetically"),(0,i.kt)("p",null,"Symbols and numbers first:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = function editConfig(menu) {\n  // edit menu\n  menu.items.push({\n    name: "Auto Fix",\n    key: "a",\n    icon: "lightbulb",\n    command: "editor.action.autoFix",\n  });\n\n  // Sort menu\n  menu.items.sort((a, b) => a.key.localeCompare(b.key));\n\n  return menu;\n};\n')),(0,i.kt)("p",null,"Letters first:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = function editConfig(menu) {\n  menu.items.sort((a, b) => alphabeticalLettersFirst(a.key, b.key));\n\n  return menu;\n};\n\nfunction alphabeticalLettersFirst(a, b) {\n  if (isKeyLetter(a) && !isKeyLetter(b)) {\n    return -1;\n  } else if (!isKeyLetter(a) && isKeyLetter(b)) {\n    return 1;\n  } else if (a.toLowerCase() < b.toLowerCase()) {\n    return -1;\n  } else if (a.toLowerCase() > b.toLowerCase()) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nfunction isKeyLetter(key) {\n  return (key >= "a" && key <= "z") || (key >= "A" && key <= "Z");\n}\n')),(0,i.kt)("h3",{id:"overwrite-the-entire-menu"},"Overwrite the entire menu"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = function editConfig(menu) {\n  return {\n    items: [\n      {\n        name: "Auto Fix",\n        key: "a",\n        icon: "lightbulb",\n        command: "editor.action.autoFix",\n      },\n    ],\n  };\n};\n')),(0,i.kt)("h3",{id:"edit-a-key"},"Edit a key"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = function editConfig(menu) {\n  getKey(menu, "c").icon = "arrow-left";\n  return menu;\n};\n\n/**\n * @param { UserMenu } userMenu\n * @param { string } key\n * @returns { UserMenu }\n */\nfunction getKey(menu, key) {\n  for (const item of menu.items) {\n    if (item.key === key) {\n      return item;\n    }\n  }\n  throw new Error(`No key ${key}`);\n}\n')),(0,i.kt)("h2",{id:"icons"},"Icons"),(0,i.kt)("p",null,"Keys have an optional ",(0,i.kt)("inlineCode",{parentName:"p"},"icon")," property.\nYou can use any icon from ",(0,i.kt)("a",{parentName:"p",href:"https://icon-sets.iconify.design/codicon/"},"codicon"),"."),(0,i.kt)("p",null,"See also VSCode icons ",(0,i.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/api/references/icons-in-labels"},"docs"),"."))}p.isMDXComponent=!0}}]);