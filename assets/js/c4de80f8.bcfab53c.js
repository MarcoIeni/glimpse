"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[943],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>f});var i=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},m=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(t),d=o,f=c["".concat(s,".").concat(d)]||c[d]||u[d]||r;return t?i.createElement(f,a(a({ref:n},m),{},{components:t})):i.createElement(f,a({ref:n},m))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<r;p++)a[p]=t[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7520:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var i=t(7462),o=(t(7294),t(3905));const r={sidebar_position:2},a="Install",l={unversionedId:"install",id:"install",title:"Install",description:"1. Install the Glimpse VSCode extension. If you don't use the VSCode marketplace, you can install the extension from Open VSX.",source:"@site/docs/install.md",sourceDirName:".",slug:"/install",permalink:"/docs/install",draft:!1,editUrl:"https://github.com/MarcoIeni/glimpse/tree/main/website/docs/install.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/"},next:{title:"Key bindings",permalink:"/docs/keybindings"}},s={},p=[{value:"Glimpse keyboard shortcut",id:"glimpse-keyboard-shortcut",level:2},{value:"Non-Vim users",id:"non-vim-users",level:3},{value:"Configuration File",id:"configuration-file",level:4},{value:"VSCode UI",id:"vscode-ui",level:4},{value:"VSCodeVim users",id:"vscodevim-users",level:3},{value:"VSCode Neovim users",id:"vscode-neovim-users",level:3}],m={toc:p},c="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(c,(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"install"},"Install"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install the ",(0,o.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=ieni.glimpse"},"Glimpse")," VSCode extension. If you don't use the VSCode marketplace, you can install the extension from ",(0,o.kt)("a",{parentName:"li",href:"https://open-vsx.org/extension/ieni/glimpse"},"Open VSX"),"."),(0,o.kt)("li",{parentName:"ol"},"Verify that the extension is correctly installed by pressing ",(0,o.kt)("inlineCode",{parentName:"li"},"Ctrl+Shift+P")," to open the command palette and searching for ",(0,o.kt)("inlineCode",{parentName:"li"},"Glimpse: Menu"),".")),(0,o.kt)("p",null,"Congrats, you ran Glimpse for the first time! \ud83c\udf89"),(0,o.kt)("p",null,"However, running Glimpse from the command palette isn't ergonomic \u2014\nlet's configure a shortcut to trigger ",(0,o.kt)("inlineCode",{parentName:"p"},"Glimpse: Menu"),"."),(0,o.kt)("h2",{id:"glimpse-keyboard-shortcut"},"Glimpse keyboard shortcut"),(0,o.kt)("p",null,"In the following, we edit the VSCode configuration to run Glimpse with:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"alt+space")," key for non-Vim users"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"space")," key for Vim users")),(0,o.kt)("p",null,"Feel free to change the key binding to your liking."),(0,o.kt)("h3",{id:"non-vim-users"},"Non-Vim users"),(0,o.kt)("p",null,"You can set the shortcut in two ways: by editing the JSON configuration file or by using the VSCode UI."),(0,o.kt)("h4",{id:"configuration-file"},"Configuration File"),(0,o.kt)("p",null,"To set the shortcut via the JSON configuration file:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Press ",(0,o.kt)("inlineCode",{parentName:"li"},"Ctrl+Shift+P")," to open the command palette and search for ",(0,o.kt)("inlineCode",{parentName:"li"},"Preferences: Open Keyboard Shortcuts (JSON)"),"."),(0,o.kt)("li",{parentName:"ul"},"Add the following:",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "key": "alt+space",\n    "command": "glimpse.menu",\n}\n')))),(0,o.kt)("h4",{id:"vscode-ui"},"VSCode UI"),(0,o.kt)("p",null,"To set the shortcut the VSCode UI:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Press ",(0,o.kt)("inlineCode",{parentName:"li"},"Ctrl+Shift+P")," to open the command palette and search for ",(0,o.kt)("inlineCode",{parentName:"li"},"Preferences: Open Keyboard Shortcuts"),"."),(0,o.kt)("li",{parentName:"ul"},"Search for ",(0,o.kt)("inlineCode",{parentName:"li"},"glimpse.menu"),"."),(0,o.kt)("li",{parentName:"ul"},"Double click on the row to edit the shortcut.")),(0,o.kt)("h3",{id:"vscodevim-users"},(0,o.kt)("a",{parentName:"h3",href:"https://marketplace.visualstudio.com/items?itemName=vscodevim.vim"},"VSCodeVim")," users"),(0,o.kt)("p",null,"Press ",(0,o.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+P")," to open the command palette and search for ",(0,o.kt)("inlineCode",{parentName:"p"},"Preferences: Open Keyboard Shortcuts (JSON)"),".\nAdd the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "key": "space",\n    "command": "glimpse.menu",\n    "when": "((activeEditorGroupEmpty && focusedView == \'\') || inWelcome || sideBarFocus) && !inputFocus && !glimpseVisible"\n}\n')),(0,o.kt)("p",null,"Press ",(0,o.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+P")," to open the command palette and search for ",(0,o.kt)("inlineCode",{parentName:"p"},"Preferences: Open User Settings (JSON)"),".\nAdd the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "vim.normalModeKeyBindingsNonRecursive": [\n        {\n            "before": [\n                "<space>"\n            ],\n            "commands": [\n                "glimpse.menu"\n            ]\n        },\n    ],\n    "vim.visualModeKeyBindingsNonRecursive": [\n        {\n            "before": [\n                "<space>"\n            ],\n            "commands": [\n                "glimpse.menu"\n            ]\n        },\n    ]\n}\n')),(0,o.kt)("h3",{id:"vscode-neovim-users"},(0,o.kt)("a",{parentName:"h3",href:"https://marketplace.visualstudio.com/items?itemName=asvetliakov.vscode-neovim"},"VSCode Neovim")," users"),(0,o.kt)("p",null,"Add the following to your ",(0,o.kt)("inlineCode",{parentName:"p"},"init.vim"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-vim"},"if exists('g:vscode')\n    \" VSCode extension config\n    nnoremap <Space> <Cmd>call VSCodeNotify('glimpse.menu')<CR>\n    vnoremap <Space> <Cmd>call VSCodeNotify('glimpse.menu')<CR>\nelse\n    \" ordinary Neovim config\nendif\n")),(0,o.kt)("p",null,"Or to your ",(0,o.kt)("inlineCode",{parentName:"p"},"init.lua"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'if vim.g.vscode then\n    -- VSCode extension config\n    vim.keymap.set("n", "<Space>", [[<Cmd>call VSCodeNotify(\'glimpse.menu\')<CR>]])\n    vim.keymap.set("v", "<Space>", [[<Cmd>call VSCodeNotify(\'glimpse.menu\')<CR>]])\nelse\n    -- ordinary Neovim config\nend\n')))}u.isMDXComponent=!0}}]);