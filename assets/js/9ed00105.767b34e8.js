"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4],{8373:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>u});var t=i(5893),o=i(1151);const r={sidebar_position:5},s="Configuration",a={id:"configuration",title:"Configuration",description:"You can make Glimpse your own by configuring its key bindings.",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/docs/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/MarcoIeni/glimpse/tree/main/website/docs/configuration.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Key bindings",permalink:"/docs/keybindings"},next:{title:"Vim tricks",permalink:"/docs/vim_tricks"}},c={},u=[{value:"Configuration examples",id:"configuration-examples",level:2},{value:"Add a key binding to the top menu",id:"add-a-key-binding-to-the-top-menu",level:3},{value:"Add a key binding a submenu",id:"add-a-key-binding-a-submenu",level:3},{value:"Delete a key from a menu",id:"delete-a-key-from-a-menu",level:3},{value:"Sorting menu items alphabetically",id:"sorting-menu-items-alphabetically",level:3},{value:"Overwrite the entire menu",id:"overwrite-the-entire-menu",level:3},{value:"Edit a key",id:"edit-a-key",level:3},{value:"Icons",id:"icons",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.p,{children:"You can make Glimpse your own by configuring its key bindings."}),"\n",(0,t.jsxs)(n.p,{children:["To allow maximum flexibility, Glimpse let you configure its menu by using ",(0,t.jsx)(n.code,{children:"javascript"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["To edit the default configuration file, press ",(0,t.jsx)(n.code,{children:"Ctrl+Shift+P"})," to open the command palette and search\nfor ",(0,t.jsx)(n.code,{children:"Glimpse: Configure"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["After editing the configuration file, you need to reload the window for the changes to take effect.\nTo do so, press ",(0,t.jsx)(n.code,{children:"Ctrl+Shift+P"})," to open the command palette and search for\n",(0,t.jsx)(n.code,{children:"Developer: Reload Window"}),", or press ",(0,t.jsx)(n.code,{children:"q r"})," from Glimpse."]}),"\n",(0,t.jsx)(n.h2,{id:"configuration-examples",children:"Configuration examples"}),"\n",(0,t.jsxs)(n.p,{children:["In the following sections, there are some examples of what you can do with the configuration file.\nRemember that you can use any ",(0,t.jsx)(n.code,{children:"javascript"})," code, so the sky is the limit!"]}),"\n",(0,t.jsxs)(n.p,{children:["Also, take a look at the ",(0,t.jsx)(n.a,{href:"https://github.com/MarcoIeni/glimpse/tree/main/src/keys",children:"keys"}),"\nrepository directory to take inspiration from the default configuration."]}),"\n",(0,t.jsx)(n.h3,{id:"add-a-key-binding-to-the-top-menu",children:"Add a key binding to the top menu"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'module.exports = function editConfig(menu) {\n  menu.items.push({\n    name: "Auto Fix",\n    key: "a",\n    icon: "lightbulb",\n    command: "editor.action.autoFix",\n  });\n\n  return menu;\n};\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"command"})," property should be the command ID of the command you want to run."]}),"\n",(0,t.jsx)(n.p,{children:"To know all the available commands and their IDs:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Press ",(0,t.jsx)(n.code,{children:"Ctrl+Shift+P"})," to open the command palette and search for ",(0,t.jsx)(n.code,{children:"Preferences: Open Keyboard Shortcuts"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Search for the command you are interested in."}),"\n",(0,t.jsxs)(n.li,{children:["Right-click on the command and select ",(0,t.jsx)(n.code,{children:"Copy Command ID"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"add-a-key-binding-a-submenu",children:"Add a key binding a submenu"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'module.exports = function editConfig(menu) {\n  const errorMenu = subMenu(menu, "e");\n  errorMenu.items.push({\n    name: "Auto Fix",\n    key: "a",\n    icon: "lightbulb",\n    command: "editor.action.autoFix",\n  });\n\n  return menu;\n};\n\n/**\n * @param { UserMenu } userMenu\n * @param { string } key\n * @returns { UserMenu }\n */\nfunction subMenu(menu, key) {\n  for (const item of menu.items) {\n    if (item.key === key && "menu" in item) {\n      return item.menu;\n    }\n  }\n  throw new Error(`No submenu for key ${key}`);\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"delete-a-key-from-a-menu",children:"Delete a key from a menu"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'module.exports = function editConfig(menu) {\n  deleteKey(menu, "*");\n  return menu;\n};\n\n/**\n * Delete a key from a menu\n * @param { UserMenu } userMenu\n * @param { string } key\n * @returns { UserMenu }\n */\nfunction deleteKey(userMenu, key) {\n  userMenu.items = userMenu.items.filter((item) => item.key !== key);\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"sorting-menu-items-alphabetically",children:"Sorting menu items alphabetically"}),"\n",(0,t.jsx)(n.p,{children:"Symbols and numbers first:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'module.exports = function editConfig(menu) {\n  // edit menu\n  menu.items.push({\n    name: "Auto Fix",\n    key: "a",\n    icon: "lightbulb",\n    command: "editor.action.autoFix",\n  });\n\n  // Sort menu\n  menu.items.sort((a, b) => a.key.localeCompare(b.key));\n\n  return menu;\n};\n'})}),"\n",(0,t.jsx)(n.p,{children:"Letters first:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'module.exports = function editConfig(menu) {\n  menu.items.sort((a, b) => alphabeticalLettersFirst(a.key, b.key));\n\n  return menu;\n};\n\nfunction alphabeticalLettersFirst(a, b) {\n  if (isKeyLetter(a) && !isKeyLetter(b)) {\n    return -1;\n  } else if (!isKeyLetter(a) && isKeyLetter(b)) {\n    return 1;\n  } else if (a.toLowerCase() < b.toLowerCase()) {\n    return -1;\n  } else if (a.toLowerCase() > b.toLowerCase()) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nfunction isKeyLetter(key) {\n  return (key >= "a" && key <= "z") || (key >= "A" && key <= "Z");\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"overwrite-the-entire-menu",children:"Overwrite the entire menu"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'module.exports = function editConfig(menu) {\n  return {\n    items: [\n      {\n        name: "Auto Fix",\n        key: "a",\n        icon: "lightbulb",\n        command: "editor.action.autoFix",\n      },\n    ],\n  };\n};\n'})}),"\n",(0,t.jsx)(n.h3,{id:"edit-a-key",children:"Edit a key"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'module.exports = function editConfig(menu) {\n  getKey(menu, "c").icon = "arrow-left";\n  return menu;\n};\n\n/**\n * @param { UserMenu } userMenu\n * @param { string } key\n * @returns { UserMenu }\n */\nfunction getKey(menu, key) {\n  for (const item of menu.items) {\n    if (item.key === key) {\n      return item;\n    }\n  }\n  throw new Error(`No key ${key}`);\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"icons",children:"Icons"}),"\n",(0,t.jsxs)(n.p,{children:["Keys have an optional ",(0,t.jsx)(n.code,{children:"icon"})," property.\nYou can use any icon from ",(0,t.jsx)(n.a,{href:"https://icon-sets.iconify.design/codicon/",children:"codicon"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["See also VSCode icons ",(0,t.jsx)(n.a,{href:"https://code.visualstudio.com/api/references/icons-in-labels",children:"docs"}),"."]})]})}function l(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>s});var t=i(7294);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);